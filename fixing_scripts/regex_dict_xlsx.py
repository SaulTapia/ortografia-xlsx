import re
expressions = {
    re.compile('(.*)(ventaana)(.*)') : 'ventana',
    re.compile('(.*)(revicion)(.*)') : 'revisión',
    re.compile('(.*)(rempllazo|remplazo|replazo)(.*)'): 'reemplazo',
    re.compile('(.*)(lampara|lapara)(.*)'): 'lámpara',
    re.compile('(.*)(decentrado)(.*)'): 'descentrado',
    re.compile('(.*)(vehiculo)(.*)'): 'vehículo',
    re.compile('(.*)(hidroneumatico)(.*)'): 'hidroneumático',
    re.compile('(.*)(plafon)((?:\s|$).*)'): 'plafón',
    re.compile('(.*)(deteriodo)(.*)'): 'deterioro',
    re.compile('(.*)(sub urbana)(.*)'): 'suburbana',
    re.compile('(.*)(energia)(.*)'): 'energía',
    re.compile('(.*)(ceramica)(.*)'): 'cerámica',
    re.compile('(.*)(labavo)(.*)'): 'lavabo',
    re.compile('(.*)(calenton)((?:\s|$).*)'): 'calentón',
    re.compile('(.*)(3d)(.*)'): '3D',
    re.compile('(.*)(balstro)(.*)'): 'balastro',
    re.compile('(.*)(hidraulic)([ao].*)') : 'hidráulic',
    re.compile('(.*)(porton)((?:\s|$).*)'): 'portón',
    re.compile('(.*)(cemeto)(.*)'): 'cemento',
    re.compile('(.*)(deprtamento)(.*)'): 'departamento',
    re.compile('(.*)(vvidrio)(.*)'): 'vidrio',
    re.compile('(.*)([ ]{2,})(.*)'): ' ',
    re.compile('(.*)([,]{2,})(.*)'): ',',
    re.compile('(.*)([.]{2,})(.*)'): ' ',
    re.compile('(.*)([ ]+,)(.*)'): ',',
    re.compile('(.*)(,[ ]{2,})(.*)'): ', ',
    re.compile('(.*\w)(cion)((?:\s|$).*)'): 'ción',
    re.compile('(.*\w)(sion)((?:\s|$).*)'): 'sión',
    re.compile('(.*)(plafoneria)(.*)'): 'plafonería',
    re.compile('(.*)(deseñaletica)(.*)'): 'de señalética',
    re.compile('(.*)(plafonenes)(.*)'): 'plafones',
    re.compile('(.*\w)(ilico)(s?(?:\s|$).*)'): 'ílico',
    re.compile('(.*\w)(istico)(s?(?:\s|$).*)'): 'ístico',
    re.compile('(.*)(istic)([oa]s?(?:\s|$).*)'): 'ística',
    re.compile('(.*)(dia)(s?(?:\s|$).*)') : 'día',
    re.compile('(.*)(lamina)(s?(?:\s|$).*)') : 'lámina',
    re.compile('(.*)(presion)(s?(?:\s|$).*)') : 'presión',
    re.compile('(.*)(etic)([oa]s?(?:\s|$).*)'): 'étic',
    re.compile('(.*)(atic)([oa]s?(?:\s|$).*)'): 'átic',
    re.compile('(.*)(etric)([oa]s?(?:\s|$).*)'): 'étric',
}
